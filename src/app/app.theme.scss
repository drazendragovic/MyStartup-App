// @ Custom color maps for Broadcast
// -----------------------------------------------------------------------------------------------------
$broadcast-white: (500: white,
  contrast: (500: $dark-primary-text));

$broadcast-black: (500: black,
  contrast: (500: $light-primary-text,
  ));

$broadcast-orange: (50: #fff9e6,
  100: #fff4cc,
  200: #ffeeb3,
  300: #ffe999,
  400: #ffe380,
  500: #ffde66,
  600: #ffd84d,
  700: #ffd333,
  800: #ffcd1a,
  900: #ffc800,
  contrast: (50: $dark-primary-text,
    100: $dark-primary-text,
    200: $dark-primary-text,
    300: $dark-primary-text,
    400: $dark-primary-text,
    500: $dark-primary-text,
    600: $dark-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: $light-primary-text));

$broadcast-gray: (50: #FAFAFA,
  100: #F5F5F5,
  200: #EEEEEE,
  300: #E0E0E0,
  400: #BDBDBD,
  500: #9E9E9E,
  600: #757575,
  700: #616161,
  800: #424242,
  900: #212121,
  contrast: (50: $dark-primary-text,
    100: $dark-primary-text,
    200: $dark-primary-text,
    300: $dark-primary-text,
    400: $dark-primary-text,
    500: $dark-primary-text,
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: $light-primary-text));

// Generate Broadcast color classes for custom palettes
$custom_palettes: (broadcast-white: $broadcast-white,
  broadcast-black: $broadcast-black,
  broadcast-orange: $broadcast-orange,
  broadcast-gray: $broadcast-gray);

@include broadcast-color-classes($custom_palettes);

// @ Typography
// Angular Material typography
$typography: mat-typography-config($font-family: "'Roboto', sans-serif",
  $title: mat-typography-level(20px, 32px, 600),
  $body-2: mat-typography-level(14px, 24px, 600),
  $button: mat-typography-level(14px, 14px, 600),
  $input: mat-typography-level(16px, 1.125, 400) // line-height must be unitless !!!
);

// Setup the typography
@include angular-material-typography($typography);

// @ Component theming
// Mixin for easier access
@import "../app/@core/layout/components/toolbar/toolbar.theme.scss";
@import "../app/@core/authentication/login.theme.scss";

@mixin components-theme($theme) {

  // Layout components
  @include toolbar-theme($theme);
  @include login-theme($theme);

}

// @ Define the default theme
// Define the primary, accent and warn palettes
$default-primary-palette: mat-palette($broadcast-gray);
$default-accent-palette: mat-palette($broadcast-orange);
$default-warn-palette: mat-palette($mat-red);
$custom-background-color: map_get($broadcast-gray, 50);

$mat-light-theme-background: map_merge($mat-light-theme-background, (background: $custom-background-color));

// Create the Material theme object
$theme: mat-light-theme($default-primary-palette, $default-accent-palette, $default-warn-palette);

// Add ".theme-default" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-default {

  // Create an Angular Material theme from the $theme map
  @include angular-material-theme($theme);

  // Apply the theme to the Broadcast Core
  @include broadcast-core-theme($theme);

  // Apply the theme to the user components
  @include components-theme($theme);

  // Generate Broadcast color classes for primary, accent and warn colors
  $palettes: (primary: $default-primary-palette,
      accent: $default-accent-palette,
      warn: $default-warn-palette);

  @include broadcast-color-classes($palettes);
}

// @ Define a blue light theme

// Define the primary, accent and warn palettes
$blue-light-theme-primary-palette: mat-palette($broadcast-gray);
$blue-light-theme-accent-palette: mat-palette($mat-blue-gray);
$blue-light-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$blue-light-theme: mat-light-theme($blue-light-theme-primary-palette, $blue-light-theme-accent-palette, $blue-light-theme-warn-palette);

// Add ".theme-yellow-light" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-blue-light {

  // Generate the Angular Material theme
  @include angular-material-theme($blue-light-theme);

  // Apply the theme to the Broadcast Core
  @include broadcast-core-theme($blue-light-theme);

  // Apply the theme to the user components
  @include components-theme($blue-light-theme);

  // Generate Broadcast color classes for primary, accent and warn colors
  $palettes: (primary: $blue-light-theme-primary-palette,
      accent: $blue-light-theme-accent-palette,
      warn: $blue-light-theme-warn-palette);

  @include broadcast-color-classes($palettes);
}


// @ Define a orange-gray dark theme

// Define the primary, accent and warn palettes
$orange-gray-dark-theme-primary-palette: mat-palette($broadcast-gray);
$orange-gray-dark-theme-accent-palette: mat-palette($broadcast-orange);
$orange-gray-dark-theme-warn-palette: mat-palette($mat-amber);
$custom-background-color: map_get($broadcast-gray, 900);

$mat-dark-theme-background: map_merge($mat-dark-theme-background, (background: $custom-background-color));
// Create the Material theme object
$orange-gray-dark-theme: mat-dark-theme($orange-gray-dark-theme-primary-palette, $orange-gray-dark-theme-accent-palette, $orange-gray-dark-theme-warn-palette);

// Add ".theme-blue-gray-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-orange-gray-dark {

  // Generate the Angular Material theme
  @include angular-material-theme($orange-gray-dark-theme);

  // Apply the theme to the Broadcast Core
  @include broadcast-core-theme($orange-gray-dark-theme);

  // Apply the theme to the user components
  @include components-theme($orange-gray-dark-theme);

  // Generate Broadcast color classes for primary, accent and warn colors
  $palettes: (primary: $orange-gray-dark-theme-primary-palette,
      accent: $orange-gray-dark-theme-accent-palette,
      warn: $orange-gray-dark-theme-warn-palette);

  @include broadcast-color-classes($palettes);
}
